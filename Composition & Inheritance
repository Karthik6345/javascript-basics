const Animal =  {
  eat : function() {
    console.log(this.name + "is eating");
  }
}

const Dog = Object.create(Animal, {
  name: { value: "husky" },
  color: { value: "white" }
});
Dog.bark = function() {
  console.log(this.name + " is barking bow bow");
};
Dog.bark();
console.log(Dog.eat());


// composition __________
Composition makes the functions more granular, resusuable and open for new features without breaking the structure.
import it and use that function, object, or a class, without extending it.
const getEnergy = (state) => ({
  eat : () => {
    console.log(state.name + "is eating");
  }
})

const Animal1 = (name, color) => {
  let state = {
    name,
    color
  }
  return Object.assign(state,
    getEnergy(state)
    )
}
const Dog1 = Animal1("Husky", "brown");
Dog1.eat()
